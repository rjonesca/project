package ui;

import dao.ServiceDAO;
import java.awt.event.ActionEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Roshun Jones
 */
public class VolunteerView extends javax.swing.JPanel implements ListSelectionListener{
    
    private String[] columnNames = {"Service ID","Title","Start Date","End Date",
        "Description", "City","State","Zip","Country"};
   
    private Main owner;
    /**
     * Creates new form VolunteerView
     */
    public VolunteerView(Main aOwner) {
        owner = aOwner;
        initComponents();
        setVisible(true);
        cbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "City","State","Zip","Country"}));
        buConnection.setEnabled(false);
        buRemove.setEnabled(false);
        ServiceDAO serviceDao = new ServiceDAO();
        Object[][] data = null;
        try {
            data = 
                    serviceDao.getConnectedServices(owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
      
        tblConnections.setModel(new javax.swing.table.DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
             return false;
            }
        });
        
        tblConnections.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                buRemove.setEnabled(true);
            }
            
            
        });
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblAvailable = new javax.swing.JTable();
        laTitle = new javax.swing.JLabel();
        laAvailable = new javax.swing.JLabel();
        cbSearch = new javax.swing.JComboBox();
        txtCriteriaValue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buSearch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblConnections = new javax.swing.JTable();
        laConnections = new javax.swing.JLabel();
        buConnection = new javax.swing.JButton();
        buRemove = new javax.swing.JButton();

        tblAvailable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Service ID", "Title", "Start Date", "End Date", "Description"
            }
        ));
        jScrollPane2.setViewportView(tblAvailable);

        laTitle.setText("Volunteer Workbench");

        laAvailable.setText("Available Services:");

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Search Criteria:");

        buSearch.setText("Search");
        buSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buSearchActionPerformed(evt);
            }
        });

        tblConnections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Service ID", "Title", "Start Date", "End Date", "Description"
            }
        ));
        jScrollPane3.setViewportView(tblConnections);

        laConnections.setText("My Connections:");

        buConnection.setText("Make Connection");
        buConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buConnectionActionPerformed(evt);
            }
        });

        buRemove.setText("Remove Conection");
        buRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(laAvailable)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(buRemove))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtCriteriaValue, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(buSearch)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(buConnection))
                                        .addComponent(laConnections)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(laTitle)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(laTitle)
                .addGap(18, 18, 18)
                .addComponent(laAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCriteriaValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buSearch)
                    .addComponent(buConnection))
                .addGap(18, 18, 18)
                .addComponent(laConnections)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buRemove)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buSearchActionPerformed
        loadAvailableTable();
    }//GEN-LAST:event_buSearchActionPerformed
    
    private void loadAvailableTable() {
        ServiceDAO serviceDao = new ServiceDAO();
        Object[][] data = null;
        try {
            data = 
                    serviceDao.getAvailableServices((String)cbSearch.getSelectedItem(),
                            txtCriteriaValue.getText(), owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
      
        tblAvailable.setModel(new javax.swing.table.DefaultTableModel(data, columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
             return false;
            }
        });
        tblAvailable.getSelectionModel().addListSelectionListener(this);
        this.revalidate();
        this.repaint();   
    }
    
    private void buConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buConnectionActionPerformed
        int[] selectedRows = tblAvailable.getSelectedRows();
        ServiceDAO serviceDao = new ServiceDAO();
        
        for(int i = 0; i< selectedRows.length; i++) {
            try {
                serviceDao.makeConnection(owner.loggedInUser.getUserId(), 
                        (Integer)tblAvailable.getModel().getValueAt(selectedRows[i], 0));
            } catch(Exception e) {
                e.printStackTrace();
            }   
        }
        
        Object[][] data = null;
        try {
            data = 
                    serviceDao.getConnectedServices(owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
      
        tblConnections.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
        tblConnections.getSelectionModel().addListSelectionListener(this);
        
       loadAvailableTable();
    }//GEN-LAST:event_buConnectionActionPerformed

    private void buRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buRemoveActionPerformed
        int[] selectedRows = tblConnections.getSelectedRows();
        ServiceDAO serviceDao = new ServiceDAO();
        
        for(int i = 0; i< selectedRows.length; i++) {
            try {
                serviceDao.removeConnection(owner.loggedInUser.getUserId(), 
                        (Integer)tblConnections.getModel().getValueAt(selectedRows[i], 0));
            } catch(Exception e) {
                e.printStackTrace();
            }   
        }
        
        Object[][] data = null;
        try {
            data = 
                    serviceDao.getConnectedServices(owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
      
        tblConnections.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
        tblConnections.getSelectionModel().addListSelectionListener(this);
        
       loadAvailableTable();
    }//GEN-LAST:event_buRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buConnection;
    private javax.swing.JButton buRemove;
    private javax.swing.JButton buSearch;
    private javax.swing.JComboBox cbSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel laAvailable;
    private javax.swing.JLabel laConnections;
    private javax.swing.JLabel laTitle;
    private javax.swing.JTable tblAvailable;
    private javax.swing.JTable tblConnections;
    private javax.swing.JTextField txtCriteriaValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        buConnection.setEnabled(true);
    }
}
