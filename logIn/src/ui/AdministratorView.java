package ui;

import dao.ServiceDAO;
import javax.swing.WindowConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Roshun Jones
 */
public class AdministratorView extends javax.swing.JPanel implements ListSelectionListener, TableModelListener {
    private Main owner = null;
    private String[] columnNames = {"Service ID","Title","Start Date","End Date",
        "Description", "City","State","Zip","Country"};
    
    public AdministratorView(Main owner) {
        initComponents();
        setVisible(true);
        this.owner = owner;
        getCurrentServices();
        buRemove.setEnabled(false);
        tblAvailable.getSelectionModel().addListSelectionListener(this);
        tblAvailable.getModel().addTableModelListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        laTitle = new javax.swing.JLabel();
        laAvailable = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVolunteers = new javax.swing.JTable();
        laAvailable1 = new javax.swing.JLabel();
        buAddService = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAvailable = new javax.swing.JTable();
        buRemove = new javax.swing.JButton();

        laTitle.setText("Administrator View");

        laAvailable.setText("My Services:");

        tblVolunteers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Service ID", "First Name", "Last Name", "Phone"
            }
        ));
        jScrollPane1.setViewportView(tblVolunteers);

        laAvailable1.setText("Interested Volunteers:");

        buAddService.setText("Add Service");
        buAddService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAddServiceActionPerformed(evt);
            }
        });

        tblAvailable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Service ID", "Title", "Start Date", "End Date", "Description"
            }
        ));
        jScrollPane2.setViewportView(tblAvailable);
        if (tblAvailable.getColumnModel().getColumnCount() > 0) {
            tblAvailable.getColumnModel().getColumn(4).setHeaderValue("Description");
        }

        buRemove.setText("Remove Service");
        buRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(laAvailable)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buAddService)
                            .addComponent(laAvailable1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buRemove)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(laTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(laTitle)
                .addGap(18, 18, 18)
                .addComponent(laAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buAddService)
                    .addComponent(buRemove))
                .addGap(12, 12, 12)
                .addComponent(laAvailable1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buAddServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAddServiceActionPerformed
        NewServiceDialog serviceDlg = new NewServiceDialog(owner, true, this);
        serviceDlg.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        serviceDlg.setVisible(true);
    }//GEN-LAST:event_buAddServiceActionPerformed

    private void buRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buRemoveActionPerformed
        int[] selectedRows = tblAvailable.getSelectedRows();
        ServiceDAO serviceDao = new ServiceDAO();
        
        for(int i = 0; i< selectedRows.length; i++) {
            try {
                serviceDao.deleteService((Integer)tblAvailable.getModel().getValueAt(selectedRows[i], 0));
            } catch(Exception e) {
                e.printStackTrace();
            }   
        }
        
        getCurrentServices();
    }//GEN-LAST:event_buRemoveActionPerformed
    
    public void getCurrentServices() {
        ServiceDAO serviceDao = new ServiceDAO();
        Object[][] data = null;
        try {
            data = serviceDao.getConnectedServices(owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
      
        tblAvailable.setModel(new javax.swing.table.DefaultTableModel(data, columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {
                if(column == 0)
                    return false;
                return true;
            }
        });
        
        try {
            data = serviceDao.getInterestedVolunteers(owner.loggedInUser.getUserId());
        } catch(Exception e) {
            e.printStackTrace();
        }
        
        String[] columns = {"Service Id", "First Name", "Last Name", "Phone"};
        tblVolunteers.setModel(new javax.swing.table.DefaultTableModel(data, columns){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
     
        this.revalidate();
        this.repaint();
    }
    
    @Override
    public void valueChanged(ListSelectionEvent e) {
        buRemove.setEnabled(true);
    }
    
    @Override
	public void tableChanged(TableModelEvent e) {
	ServiceDAO serviceDao = new ServiceDAO();
        
        int row = e.getFirstRow();
        int column = e.getColumn();
        TableModel model = (TableModel)e.getSource();
        String columnName = model.getColumnName(column);
        Object data = model.getValueAt(row, column);
        int serviceId = (Integer) model.getValueAt(row, 0);
        try {
            serviceDao.updateService(serviceId, columnName, data);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buAddService;
    private javax.swing.JButton buRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel laAvailable;
    private javax.swing.JLabel laAvailable1;
    private javax.swing.JLabel laTitle;
    private javax.swing.JTable tblAvailable;
    private javax.swing.JTable tblVolunteers;
    // End of variables declaration//GEN-END:variables
}
